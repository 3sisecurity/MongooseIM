-module(service_admin_extra_upload).

-include("ejabberd_commands.hrl").
-include("mongoose_logger.hrl").
-include("jlib.hrl").

-export([commands/0, get_urls/5]).

-define(CMD_TIMEOUT, 300000).

-spec commands() -> [ejabberd_commands:cmd()].
commands() -> [
    #ejabberd_commands{
        name     = http_upload,
        tags     = [http, upload],
        desc     = "Generate upload/dowload URLs for the file",
        longdesc = "Returns upload/dowload URLs generated by mod_http_upload. Example:\n"
                   " mongooseimctl http_upload localhost tmp.txt 5 '' 60",
        module   = ?MODULE,
        function = get_urls,
        args     = [{domain, binary}, {file_name, binary}, {size, integer},
                    {content_type, binary}, {timeout, integer}],
        result   = {urls, {tuple,
                           [{put_url, binary},
                            {get_url, binary},
                            {header, {list, {field, {tuple, [{name, binary},
                                                             {value, binary}]}}}}]}}
    }
].

-spec get_urls(Host :: binary(), Filename :: binary(), Size :: pos_integer(),
               ContentType :: binary(), Timeout :: pos_integer()) ->
         {PutURL :: binary(), GetURL :: binary(), Headers :: [{binary(), binary()}]}.
get_urls(Host, Filename, Size, <<"">>, Timeout) ->
    get_urls(Host, Filename, Size, undefined, Timeout);
get_urls(_Host, _Filename, _Size, _ContentType, _Timeout) ->
    {PutURL, GetURL, Header} =
        %mod_http_upload:get_urls(Host, Filename, Size, ContentType, Timeout),
        { %% test values, taken from XEP-363
          <<"https://upload.montague.tld/4a771ac1-f0b2-4a4a-9700-f2a26fa2bb67/tr%C3%A8s%20cool.jpg">>,
          <<"https://download.montague.tld/4a771ac1-f0b2-4a4a-9700-f2a26fa2bb67/tr%C3%A8s%20cool.jpg">>,
          #{<<"Authorization">> => <<"Basic Base64String==">>,
            <<"Cookie">> => <<"foo=bar; user=romeo">>} },
    {PutURL, GetURL, maps:to_list(Header)}.