name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # required for run_common_test.erl
  KEEP_COVER_RUNNING: '1'
  SKIP_AUTO_COMPILE: 'true'

jobs:
  small_tests:
    name: small_tests on OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: ['23.0.3', '22.3']
    runs-on: ubuntu-latest
    env:
      PRESET: 'small_tests'
    steps:
      - uses: actions/checkout@v2
      - uses: ErlGang/setup-erlang@v1.0.0
        with:
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/rebar3
          key: rebar3-${{ hashFiles('rebar.lock') }}
      - name: create certificates
        run: make certs
      - name: run test
        run: tools/travis-test.sh -p $PRESET -s true -e true

  big_tests:
    name: ${{matrix.preset}} on OTP ${{matrix.otp}}
    strategy:
      matrix:
        preset: [internal_mnesia]
        otp: ['23.0.3']
    runs-on: ubuntu-latest
    env:
      PRESET: ${{matrix.preset}}
    steps:
      - uses: actions/checkout@v2
      - uses: ErlGang/setup-erlang@v1.0.0
        with:
          otp-version: ${{matrix.otp}}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/rebar3
          key: rebar3-${{ hashFiles('rebar.lock') }}
      - name: create certificates
        run: make certs
      - if: ${{ matrix.preset == 'internal_mnesia' }}
        run:
          echo "DB=mnesia minio redis" >> $GITHUB_ENV
          echo "REL_CONFIG=with-all" >> $GITHUB_ENV
          echo "TLS_DIST=true" >> $GITHUB_ENV
      - name: build releases
        run: |
          ./rebar3 compile
          tools/build-releases.sh
      - name: build big tests
        run: tools/travis-build-tests.sh
      - name: start backends
        run: tools/travis-setup-db.sh
      - name: run test
        run: tools/travis-test.sh -p $PRESET -s false -e false
      - name: report coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: '1'
        run: |
          ls -ahl _build/test/cover || true
          cp _build/test/cover/*.coverdata /tmp || true
          ls -ahl /tmp/*.coverdata || true
          ./rebar3 coveralls send || {
            echo --rebar3.crashdump--
            cat rebar3.crashdump
            exit 1
          }
