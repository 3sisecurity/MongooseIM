"""
Allow admin to manage Multi-User Chat Light rooms.
"""
type MUCLightAdminMutation @protected{
  "Create a MUC light room under the given XMPP hostname"
  createRoom(domain: String!, name: String!, owner: JID!, subject: String!, id: String): Room
  "Change configuration of a MUC Light room"
  changeRoomConfiguration(id: String!, domain: String!, name: String!, owner: JID!, subject: String!): Room
  "Invite a user to a MUC Light room"
  inviteUser(domain: String!, name: String!, sender: JID!, recipient: JID!): String
  "Remove a MUC Light room"
  deleteRoom(id: String!, domain: String!): String
  "Kick a user from a MUC Light room"
  kickUser(domain: String!, id: String!, user: JID!): String
  "Send a message to a MUC Light room"
  sendMessageToRoom(domain: String!, name: String!, from: JID!, body: String!): String
}

"""
Allow admin to get information about Multi-User Chat Light rooms.
"""
type MUCLightAdminQuery @protected{
  "Get the MUC Light room archived messages"
  getRoomMessages(domain: String!, id: String!, pageSize: Int!, before: DateTime): StanzasPayload
  "Get configuration of the MUC Light room"
  getRoomConfig(domain: String!, id: String!): Room
  "Get users list of given MUC Light room"
  listRoomUsers(domain: String!, id: String!): [RoomUser!]
  "Get the list of MUC Light rooms that the user participates in"
  listUserRooms(user: JID!): [JID!]
}

type RoomPayload{
  message: String!
  room: Room
}

type Room{
  jid: JID 
  name: String
  subject: String
  participants: [RoomUser!]
}

type RoomUser{
  jid: JID
  affiliance: String 
}
