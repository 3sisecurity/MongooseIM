"""
Allow admin to acquire data about the node
"""
type ServerAdminQuery @protected{
  "Get the status of the server"
  status: Status
    @protected(type: GLOBAL)
  "Get the loglevel of the server"
  getLoglevel: LogLevel
    @protected(type: GLOBAL)
  "Get the Erlang cookie of this node"
  getCookie: String
    @protected(type: GLOBAL)
}

"""
Allow admin to manage the node
"""
type ServerAdminMutation @protected{
  "Join the node to a cluster. Call it on the joining node"
  joinCluster(node: String!): String
    @protected(type: GLOBAL)
  "Leave a cluster. Call it on the node that is going to leave"
  leaveCluster: String
    @protected(type: GLOBAL)
  "Remove node from the cluster. Call it from the member of the cluster"
  removeFromCluster(node: String!): String
    @protected(type: GLOBAL)
  "Restart mongooseim node"
  restart: String
    @protected(type: GLOBAL)
  "Stop mongooseim node"
  stop: String
    @protected(type: GLOBAL)
  "Remove a MongooseIM node from Mnesia clustering config"
  removeNode(node: String!): String
    @protected(type: GLOBAL)
  "Set Node's loglevel"
  setLoglevel(level: LogLevel!): String
    @protected(type: GLOBAL)
}

type Status {
  statusCode: StatusCode
  message: String
}

enum StatusCode {
  RUNNING
  NOT_RUNNING
}

enum LogLevel {
  NONE
  EMERGENCY
  ALERT
  CRITICAL
  ERROR
  WARNING
  NOTICE
  INFO
  DEBUG
  ALL
}
